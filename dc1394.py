'''
Created on May 20, 2011

Functions and constants provided by the libdc1394 firewire camera
library.  These are here to support the Python code that interfaces with
this library.

@author: bseastwo
'''

'''
If we could guarantee access to the firewire video library, we could
grab values directly from there, but we want this code to work whether
the library is present or not.  This is because building the firewire
video library has a dependency on libdc1394, but on a system that will
never have a firewire camera attached it seems silly to build libdc1394
as a requirement for running Microvea.
FV_VIDEO_MODE_MIN = ctypes.c_long.in_dll(videolib, "FV_VIDEO_MODE_MIN").value
'''
'''
Redefine library enums used as flags.  Python has no enum concept, so
we have to assign each value in turn.  Note that enum values were
previously mapped as ctypes.c_long, but such values cannot be used as
keys in dictionaries.  Ints seem to work just as well on the Python
side.
'''

DC1394_ISO_SPEED_MIN = 0
DC1394_FRAMERATE_MIN = 32
DC1394_VIDEO_MODE_MIN = 64
DC1394_COLOR_CODING_MIN = 352
DC1394_FEATURE_MIN = 416
DC1394_FEATURE_MODE_MIN = 736
DC1394_COLOR_FILTER_MIN = 512

(
DC1394_ISO_SPEED_100,
DC1394_ISO_SPEED_200,
DC1394_ISO_SPEED_400,
DC1394_ISO_SPEED_800,
DC1394_ISO_SPEED_1600,
DC1394_ISO_SPEED_3200
) = map(int, xrange(DC1394_ISO_SPEED_MIN, DC1394_ISO_SPEED_MIN+6))

(
DC1394_FRAMERATE_1_875,
DC1394_FRAMERATE_3_75,
DC1394_FRAMERATE_7_5,
DC1394_FRAMERATE_15,
DC1394_FRAMERATE_30,
DC1394_FRAMERATE_60,
DC1394_FRAMERATE_120,
DC1394_FRAMERATE_240
) = map(int, xrange(DC1394_FRAMERATE_MIN, DC1394_FRAMERATE_MIN+8))

(
DC1394_VIDEO_MODE_160x120_YUV444,
DC1394_VIDEO_MODE_320x240_YUV422,
DC1394_VIDEO_MODE_640x480_YUV411,
DC1394_VIDEO_MODE_640x480_YUV422,
DC1394_VIDEO_MODE_640x480_RGB8,
DC1394_VIDEO_MODE_640x480_MONO8,
DC1394_VIDEO_MODE_640x480_MONO16,
DC1394_VIDEO_MODE_800x600_YUV422,
DC1394_VIDEO_MODE_800x600_RGB8,
DC1394_VIDEO_MODE_800x600_MONO8,
DC1394_VIDEO_MODE_1024x768_YUV422,
DC1394_VIDEO_MODE_1024x768_RGB8,
DC1394_VIDEO_MODE_1024x768_MONO8,
DC1394_VIDEO_MODE_800x600_MONO16,
DC1394_VIDEO_MODE_1024x768_MONO16,
DC1394_VIDEO_MODE_1280x960_YUV422,
DC1394_VIDEO_MODE_1280x960_RGB8,
DC1394_VIDEO_MODE_1280x960_MONO8,
DC1394_VIDEO_MODE_1600x1200_YUV422,
DC1394_VIDEO_MODE_1600x1200_RGB8,
DC1394_VIDEO_MODE_1600x1200_MONO8,
DC1394_VIDEO_MODE_1280x960_MONO16,
DC1394_VIDEO_MODE_1600x1200_MONO16,
DC1394_VIDEO_MODE_EXIF,
DC1394_VIDEO_MODE_FORMAT7_0,
DC1394_VIDEO_MODE_FORMAT7_1,
DC1394_VIDEO_MODE_FORMAT7_2,
DC1394_VIDEO_MODE_FORMAT7_3,
DC1394_VIDEO_MODE_FORMAT7_4,
DC1394_VIDEO_MODE_FORMAT7_5,
DC1394_VIDEO_MODE_FORMAT7_6,
DC1394_VIDEO_MODE_FORMAT7_7
) = map(int, xrange(DC1394_VIDEO_MODE_MIN, DC1394_VIDEO_MODE_MIN + 32))

(
DC1394_COLOR_CODING_MONO8,
DC1394_COLOR_CODING_YUV411,
DC1394_COLOR_CODING_YUV422,
DC1394_COLOR_CODING_YUV444,
DC1394_COLOR_CODING_RGB8,
DC1394_COLOR_CODING_MONO16,
DC1394_COLOR_CODING_RGB16,
DC1394_COLOR_CODING_MONO16S,
DC1394_COLOR_CODING_RGB16S,
DC1394_COLOR_CODING_RAW8,
DC1394_COLOR_CODING_RAW16
) = map(int, xrange(DC1394_COLOR_CODING_MIN, DC1394_COLOR_CODING_MIN + 11))


(
DC1394_FEATURE_BRIGHTNESS,
DC1394_FEATURE_EXPOSURE,
DC1394_FEATURE_SHARPNESS,
DC1394_FEATURE_WHITE_BALANCE,
DC1394_FEATURE_HUE,
DC1394_FEATURE_SATURATION,
DC1394_FEATURE_GAMMA,
DC1394_FEATURE_SHUTTER,
DC1394_FEATURE_GAIN,
DC1394_FEATURE_IRIS,
DC1394_FEATURE_FOCUS,
DC1394_FEATURE_TEMPERATURE,
DC1394_FEATURE_TRIGGER,
DC1394_FEATURE_TRIGGER_DELAY,
DC1394_FEATURE_WHITE_SHADING,
DC1394_FEATURE_FRAME_RATE,
DC1394_FEATURE_ZOOM,
DC1394_FEATURE_PAN,
DC1394_FEATURE_TILT,
DC1394_FEATURE_OPTICAL_FILTER,
DC1394_FEATURE_CAPTURE_SIZE,
DC1394_FEATURE_CAPTURE_QUALITY
) = map(int, xrange(DC1394_FEATURE_MIN, DC1394_FEATURE_MIN+22))

(
DC1394_FEATURE_MODE_MANUAL,
DC1394_FEATURE_MODE_AUTO,
DC1394_FEATURE_MODE_ONE_PUSH_AUTO
) = map(int, xrange(DC1394_FEATURE_MODE_MIN, DC1394_FEATURE_MODE_MIN+3))

(
DC1394_COLOR_FILTER_RGGB,
DC1394_COLOR_FILTER_GBRG,
DC1394_COLOR_FILTER_GRBG,
DC1394_COLOR_FILTER_BGGR
) = map(int, xrange(DC1394_COLOR_FILTER_MIN, DC1394_COLOR_FILTER_MIN+4))

(
DEMOSAIC_RGB,
SWAP_BYTES,
SHIFT_BITS4
) = map(lambda x: int(2**x), xrange(0, 3))

'''
The following dictionaries define plain text representations of each
enumerated value defined above.  This is helpful for generating user
interfaces or in log messages.  Both forward and inverse mappings are
provided.
'''

ISO_SPEEDS = {"100": DC1394_ISO_SPEED_100,
              "200": DC1394_ISO_SPEED_200,
              "400": DC1394_ISO_SPEED_400,
              "800": DC1394_ISO_SPEED_800,
              "1600": DC1394_ISO_SPEED_1600,
              "3200": DC1394_ISO_SPEED_3200}
ISO_SPEEDS_INV = dict((ISO_SPEEDS[k], k) for k in ISO_SPEEDS)

FRAMERATES = {"1.875": DC1394_FRAMERATE_1_875,
              "3.75": DC1394_FRAMERATE_3_75,
              "7.5": DC1394_FRAMERATE_7_5,
              "15": DC1394_FRAMERATE_15,
              "30": DC1394_FRAMERATE_30,
              "60": DC1394_FRAMERATE_60,
              "120": DC1394_FRAMERATE_120,
              "240": DC1394_FRAMERATE_240}
FRAMERATES_INV = dict((FRAMERATES[k], k) for k in FRAMERATES)

VIDEO_MODES = {"160x120_YUV444": DC1394_VIDEO_MODE_160x120_YUV444,
               "320x240_YUV422": DC1394_VIDEO_MODE_320x240_YUV422,
               "640x480_YUV411": DC1394_VIDEO_MODE_640x480_YUV411,
               "640x480_YUV422": DC1394_VIDEO_MODE_640x480_YUV422,
               "640x480_RGB8": DC1394_VIDEO_MODE_640x480_RGB8,
               "640x480_MONO8": DC1394_VIDEO_MODE_640x480_MONO8,
               "640x480_MONO16": DC1394_VIDEO_MODE_640x480_MONO16,
               "800x600_YUV422": DC1394_VIDEO_MODE_800x600_YUV422,
               "800x600_RGB8": DC1394_VIDEO_MODE_800x600_RGB8,
               "800x600_MONO8": DC1394_VIDEO_MODE_800x600_MONO8,
               "1024x768_YUV422": DC1394_VIDEO_MODE_1024x768_YUV422,
               "1024x768_RGB8": DC1394_VIDEO_MODE_1024x768_RGB8,
               "1024x768_MONO8": DC1394_VIDEO_MODE_1024x768_MONO8,
               "800x600_MONO16": DC1394_VIDEO_MODE_800x600_MONO16,
               "1024x768_MONO16": DC1394_VIDEO_MODE_1024x768_MONO16,
               "1280x960_YUV422": DC1394_VIDEO_MODE_1280x960_YUV422,
               "1280x960_RGB8": DC1394_VIDEO_MODE_1280x960_RGB8,
               "1280x960_MONO8": DC1394_VIDEO_MODE_1280x960_MONO8,
               "1600x1200_YUV422": DC1394_VIDEO_MODE_1600x1200_YUV422,
               "1600x1200_RGB8": DC1394_VIDEO_MODE_1600x1200_RGB8,
               "1600x1200_MONO8": DC1394_VIDEO_MODE_1600x1200_MONO8,
               "1280x960_MONO16": DC1394_VIDEO_MODE_1280x960_MONO16,
               "1600x1200_MONO16": DC1394_VIDEO_MODE_1600x1200_MONO16,
               "EXIF":  DC1394_VIDEO_MODE_EXIF,
               "FORMAT7_0": DC1394_VIDEO_MODE_FORMAT7_0,
               "FORMAT7_1": DC1394_VIDEO_MODE_FORMAT7_1,
               "FORMAT7_2": DC1394_VIDEO_MODE_FORMAT7_2,
               "FORMAT7_3": DC1394_VIDEO_MODE_FORMAT7_3,
               "FORMAT7_4": DC1394_VIDEO_MODE_FORMAT7_4,
               "FORMAT7_5": DC1394_VIDEO_MODE_FORMAT7_5,
               "FORMAT7_6": DC1394_VIDEO_MODE_FORMAT7_6,
               "FORMAT7_7": DC1394_VIDEO_MODE_FORMAT7_7}
VIDEO_MODES_INV = dict((VIDEO_MODES[k], k) for k in VIDEO_MODES)

COLOR_CODINGS = {"MONO8": DC1394_COLOR_CODING_MONO8,
                 "YUV411": DC1394_COLOR_CODING_YUV411,
                 "YUV422": DC1394_COLOR_CODING_YUV422,
                 "YUV444": DC1394_COLOR_CODING_YUV444,
                 "RGB8": DC1394_COLOR_CODING_RGB8,
                 "MONO16": DC1394_COLOR_CODING_MONO16,
                 "RGB16": DC1394_COLOR_CODING_RGB16,
                 "MONO16S": DC1394_COLOR_CODING_MONO16S,
                 "RGB16S": DC1394_COLOR_CODING_RGB16S,
                 "RAW8": DC1394_COLOR_CODING_RAW8,
                 "RAW16": DC1394_COLOR_CODING_RAW16}
COLOR_CODINGS_INV = dict((COLOR_CODINGS[k], k) for k in COLOR_CODINGS)

FEATURES = {"BRIGHTNESS": DC1394_FEATURE_BRIGHTNESS,
            "EXPOSURE": DC1394_FEATURE_EXPOSURE,
            "SHARPNESS": DC1394_FEATURE_SHARPNESS,
            "WHITE_BALANCE": DC1394_FEATURE_WHITE_BALANCE,
            "HUE": DC1394_FEATURE_HUE,
            "SATURATION": DC1394_FEATURE_SATURATION,
            "GAMMA": DC1394_FEATURE_GAMMA,
            "SHUTTER": DC1394_FEATURE_SHUTTER,
            "GAIN": DC1394_FEATURE_GAIN,
            "IRIS": DC1394_FEATURE_IRIS,
            "FOCUS": DC1394_FEATURE_FOCUS,
            "TEMPERATURE": DC1394_FEATURE_TEMPERATURE,
            "TRIGGER": DC1394_FEATURE_TRIGGER,
            "TRIGGER_DELAY": DC1394_FEATURE_TRIGGER_DELAY,
            "WHITE_SHADING": DC1394_FEATURE_WHITE_SHADING,
            "FRAME_RATE": DC1394_FEATURE_FRAME_RATE,
            "ZOOM": DC1394_FEATURE_ZOOM,
            "PAN": DC1394_FEATURE_PAN,
            "TILT": DC1394_FEATURE_TILT,
            "OPTICAL_FILTER": DC1394_FEATURE_OPTICAL_FILTER,
            "CAPTURE_SIZE": DC1394_FEATURE_CAPTURE_SIZE,
            "CAPTURE_QUALITY": DC1394_FEATURE_CAPTURE_QUALITY}
FEATURES_INV = dict((FEATURES[k], k) for k in FEATURES)

FILTERS = {"RGGB": DC1394_COLOR_FILTER_RGGB,
           "GBRG": DC1394_COLOR_FILTER_GBRG,
           "GRBG": DC1394_COLOR_FILTER_GRBG,
           "BGGR": DC1394_COLOR_FILTER_BGGR}
FILTERS_INV = dict((FILTERS[k], k) for k in FILTERS)

RAW_PROCESSES = {"DEMOSAIC_RGB": DEMOSAIC_RGB,
                 "SWAP_BYTES": SWAP_BYTES,
                 "SHIFT_BITS4": SHIFT_BITS4}
RAW_PROCESSES_INV = dict((RAW_PROCESSES[k], k) for k in RAW_PROCESSES)